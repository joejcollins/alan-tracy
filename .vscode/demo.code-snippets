{

    "Add logging for discovery": {
        "prefix": "demo01log",
        "body": [
            "from loguru import logger",
            "logger.info(f\"Received request for {digit}\")"
        ],
        "description": "Add logging to the endpoint so we can see what is happening"
    },
    "Http exploration of the meaning of life": {
        "prefix": "demo02http01",
        "body": [
            "### Confirm the meaning of life",
            "GET http://127.0.0.1:8000/the_answer/42",
            "> {%",
            "    client.test(\"Request executed successfully\", function() {",
            "        client.assert(response.status === 200, \"Response status is not 200\");",
            "        client.assert(response.body.startsWith(\"life the universe\"), \"Response body is not right\");",
            "    });",
            "    console.log(\"response :\", response.body);",
            "%}"
        ],
        "description": "Try the HTTP endpoint to see if you get the meaning of life message"
    },
    "Http exploration with the number two": {
        "prefix": "demo02http02",
        "body": [
            "### Confirm that one and one is two",
            "GET http://127.0.0.1:8000/the_answer/2",
            "> {%",
            "    client.test(\"Request executed successfully\", function() {",
            "        client.assert(response.status === 200, \"Response status is not 200\");",
            "        client.assert(response.body.what_was_written === 2, \"Response body is not right\");",
            "    });",
            "    console.log(\"response :\", response.body.what_was_written);",
            "%}"
        ],
        "description": "Try the HTTP endpoint to see if some math works"
    },
    "Automated test of the meaning of life": {
        "prefix": "demo03test01",
        "body": [
            "def test_the_meaning_of_life() -> None:",
            "    \"\"\"Test.\"\"\"",
            "    # Arrange",
            "    client = testclient.TestClient(app.app)",
            "    # Act",
            "    response = client.get(\"/the_answer/42\")",
            "    # Assert",
            "    assert response.status_code == http.HTTPStatus.OK",
            "    assert response.json() == \"life the universe and everything\"",
        ],
        "description": "Test the meaning of life endpoint"
    },
    "Automated test of the number two": {
        "prefix": "demo03test02",
        "body": [
            "def test_one_and_one_is_two() -> None:",
            "    \"\"\"Test.\"\"\"",
            "    # Arrange",
            "    client = testclient.TestClient(app.app)",
            "    # Act",
            "    response = client.get(\"/the_answer/2\")",
            "    # Assert",
            "    assert response.status_code == http.HTTPStatus.OK",
            "    assert response.json()[\"what_was_written\"] == \"2\"",
        ],
        "description": "Test the meaning maths endpoint"
    },
    "Add a separate function": {
        "prefix": "demo4function01",
        "body": [
            "    return qwer(digit)",
            "",
            "def qwer(digit):"
        ],
        "description": "Separate the logic from the endpoint"
    },
    "Add a feature flag": {
        "prefix": "demo5flag01",
        "body": [
            "if unleash.toggle(\"joe-new-function\"):",
            "    return qwer(digit)",
            "else:",
        ],
        "description": "Add a feature flag to the endpoint"
    },
}